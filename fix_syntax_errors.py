#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
"""

import os
import re
from pathlib import Path

def fix_syntax_errors():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ...")
    
    frontend_dir = Path("frontend/src")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    files_to_fix = [
        "components/Sidebar.tsx",
        "pages/Portfolio.tsx", 
        "pages/Scenarios.tsx",
        "store/index.ts"
    ]
    
    for file_path in files_to_fix:
        full_path = frontend_dir / file_path
        if full_path.exists():
            print(f"üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {file_path}...")
            fix_file_syntax(full_path)
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")

def fix_file_syntax(file_path: Path):
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ —Ñ–∞–π–ª–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–æ–π–Ω—ã—Ö —Å–∫–æ–±–æ–∫ –≤ map —Ñ—É–Ω–∫—Ü–∏—è—Ö
        content = re.sub(
            r'\.map\(\(\(([^)]+)\): any\) =>',
            r'.map((\1: any) =>',
            content
        )
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ store/index.ts
        if file_path.name == "index.ts":
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–æ
            content = re.sub(
                r'export type RootState = ReturnType<typeof store\.getState>;\nexport type AppDispatch = typeof store\.dispatch;\n\n// –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ö—É–∫–∏\nimport \{ useDispatch, useSelector, TypedUseSelectorHook \} from \'react-redux\';\n\nexport const useAppDispatch = \(\) => useDispatch<AppDispatch>\(\);\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;',
                '// –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ö—É–∫–∏\nimport { useDispatch, useSelector, TypedUseSelectorHook } from \'react-redux\';\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;',
                content
            )
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        if "useAppDispatch" in content and "import { useAppDispatch" not in content:
            # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞
            import_match = re.search(r"import.*from.*react.*;", content)
            if import_match:
                insert_pos = import_match.end()
                content = content[:insert_pos] + "\nimport { useAppDispatch, useAppSelector } from '../store';" + content[insert_pos:]
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ React, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
                content = "import { useAppDispatch, useAppSelector } from '../store';\n" + content
        
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ {file_path}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è")
    print("=" * 70)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    os.chdir(Path(__file__).parent)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    fix_syntax_errors()
    
    print("\n" + "=" * 70)
    print("üéâ –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    print("=" * 70)
    print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥:")
    print("   cd frontend && npm start")
    print("=" * 70)

if __name__ == "__main__":
    main()

