#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
"""

import os
import re
from pathlib import Path

def fix_imports():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ...")
    
    frontend_dir = Path("frontend/src")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    files_to_fix = [
        "components/CashflowChart.tsx",
        "components/MetricCard.tsx", 
        "components/Sidebar.tsx",
        "pages/Portfolio.tsx",
        "pages/Scenarios.tsx",
        "pages/Settings.tsx"
    ]
    
    for file_path in files_to_fix:
        full_path = frontend_dir / file_path
        if full_path.exists():
            print(f"üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {file_path}...")
            fix_file_imports(full_path)
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")

def fix_file_imports(file_path: Path):
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Ñ–∞–π–ª–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω–∞ —Å—Ç–∞—Ä—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ Redux –Ω–∞ –Ω–æ–≤—ã–µ
        content = re.sub(
            r"import \{ useDispatch, useSelector \} from 'react-redux';\nimport \{ RootState \} from '\.\./store';",
            "import { useAppDispatch, useAppSelector } from '../store';",
            content
        )
        
        content = re.sub(
            r"import \{ useDispatch, useSelector \} from 'react-redux';\nimport \{ RootState \} from '\.\./\.\./store';",
            "import { useAppDispatch, useAppSelector } from '../../store';",
            content
        )
        
        # –ó–∞–º–µ–Ω–∞ useDispatch –Ω–∞ useAppDispatch
        content = re.sub(r"const dispatch = useDispatch\(\);", "const dispatch = useAppDispatch();", content)
        
        # –ó–∞–º–µ–Ω–∞ useSelector –Ω–∞ useAppSelector
        content = re.sub(
            r"useSelector\(\(state: RootState\) => state\.(\w+)\)",
            r"useAppSelector((state) => state.\1)",
            content
        )
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        content = re.sub(
            r"\(state\) => state\.(\w+)\)",
            r"(state: any) => state.\1)",
            content
        )
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –≤ map —Ñ—É–Ω–∫—Ü–∏—è—Ö
        content = re.sub(
            r"\.map\(([^=]+) =>",
            r".map((\1: any) =>",
            content
        )
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –≤ filter —Ñ—É–Ω–∫—Ü–∏—è—Ö
        content = re.sub(
            r"\.filter\(([^=]+) =>",
            r".filter((\1: any) =>",
            content
        )
        
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ {file_path}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è")
    print("=" * 70)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    os.chdir(Path(__file__).parent)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    fix_imports()
    
    print("\n" + "=" * 70)
    print("üéâ –ò–º–ø–æ—Ä—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    print("=" * 70)
    print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥:")
    print("   cd frontend && npm start")
    print("=" * 70)

if __name__ == "__main__":
    main()

