#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSH –∫–ª—é—á–∞ –¥–ª—è GitHub Secrets
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/get-ssh-key.sh

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SSH_KEY_PATH="~/.ssh/DSkey_project"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ SSH –∫–ª—é—á–∞
get_ssh_key() {
    log_info "–ü–æ–ª—É—á–µ–Ω–∏–µ SSH –∫–ª—é—á–∞..."
    
    SSH_KEY_PATH_EXPANDED=$(eval echo $SSH_KEY_PATH)
    
    if [ ! -f "$SSH_KEY_PATH_EXPANDED" ]; then
        log_error "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY_PATH_EXPANDED"
        log_info "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª—é—á —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø—É—Ç—å —É–∫–∞–∑–∞–Ω –≤–µ—Ä–Ω–æ"
        exit 1
    fi
    
    SSH_KEY_CONTENT=$(cat "$SSH_KEY_PATH_EXPANDED")
    
    log_success "SSH –∫–ª—é—á –ø–æ–ª—É—á–µ–Ω"
    
    echo ""
    log_info "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ SSH –∫–ª—é—á–∞ –¥–ª—è GitHub Secret SERVER_SSH_KEY:"
    echo "================================================================"
    echo "$SSH_KEY_CONTENT"
    echo "================================================================"
    echo ""
    
    log_warning "‚ö†Ô∏è  –í–ê–ñ–ù–û:"
    echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –í–ï–°–¨ —Ç–µ–∫—Å—Ç –≤—ã—à–µ (–≤–∫–ª—é—á–∞—è BEGIN –∏ END —Å—Ç—Ä–æ–∫–∏)"
    echo "2. –í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ GitHub Secret —Å –∏–º–µ–Ω–µ–º 'SERVER_SSH_KEY'"
    echo "3. –ù–ï –¥–æ–±–∞–≤–ª—è–π—Ç–µ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫"
    echo ""
    
    # –°–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∫–ª—é—á–æ–º
    TEMP_FILE="/tmp/ssh_key_for_github.txt"
    echo "$SSH_KEY_CONTENT" > "$TEMP_FILE"
    
    log_info "üíæ SSH –∫–ª—é—á —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $TEMP_FILE"
    log_info "–í—ã –º–æ–∂–µ—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –æ—Ç—Ç—É–¥–∞:"
    echo "   cat $TEMP_FILE | pbcopy"
    echo ""
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
show_instructions() {
    log_info "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ GitHub Secrets:"
    echo ""
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://github.com/pavelstepanovpm/CredAnlv2/settings/secrets/actions"
    echo "2. –ù–∞–∂–º–∏—Ç–µ 'New repository secret'"
    echo "3. –î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å–µ–∫—Ä–µ—Ç—ã:"
    echo ""
    echo "   Name: SERVER_HOST"
    echo "   Secret: 87.228.88.77"
    echo ""
    echo "   Name: SERVER_USER"
    echo "   Secret: root"
    echo ""
    echo "   Name: SERVER_SSH_KEY"
    echo "   Secret: [—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ SSH –∫–ª—é—á–∞ –≤—ã—à–µ]"
    echo ""
    echo "   Name: PROJECT_PATH"
    echo "   Secret: /opt/credit-analytics"
    echo ""
    log_info "üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: MANUAL_GITHUB_SECRETS_SETUP.md"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üîë –ü–æ–ª—É—á–µ–Ω–∏–µ SSH –∫–ª—é—á–∞ –¥–ª—è GitHub Secrets"
    echo "=========================================="
    
    get_ssh_key
    show_instructions
    
    log_success "üéâ SSH –∫–ª—é—á –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!"
    echo ""
    log_info "üöÄ –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ–∫—Ä–µ—Ç–æ–≤ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ:"
    echo "   git commit --allow-empty -m 'test: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ'"
    echo "   git push origin main"
    echo ""
    log_info "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: https://github.com/pavelstepanovpm/CredAnlv2/actions"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        --key-path)
            SSH_KEY_PATH="$2"
            shift 2
            ;;
        --help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–û–ø—Ü–∏–∏:"
            echo "  --key-path PATH   –ü—É—Ç—å –∫ SSH –∫–ª—é—á—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ~/.ssh/DSkey_project)"
            echo "  --help            –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            exit 0
            ;;
        *)
            log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
