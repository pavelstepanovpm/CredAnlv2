#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub Secrets
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/setup-github-secrets.sh

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REPO_OWNER="pavelstepanovpm"
REPO_NAME="CredAnlv2"
SERVER_HOST="87.228.88.77"
SERVER_USER="root"
PROJECT_PATH="/opt/credit-analytics"
SSH_KEY_PATH="~/.ssh/DSkey_project"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI
check_gh_cli() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI..."
    
    if ! command -v gh &> /dev/null; then
        log_error "GitHub CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        log_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GitHub CLI:"
        log_info "  brew install gh"
        log_info "  gh auth login"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if ! gh auth status &> /dev/null; then
        log_error "GitHub CLI –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
        log_info "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: gh auth login"
        exit 1
    fi
    
    log_success "GitHub CLI –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ SSH –∫–ª—é—á–∞
get_ssh_key() {
    log_info "–ü–æ–ª—É—á–µ–Ω–∏–µ SSH –∫–ª—é—á–∞..."
    
    SSH_KEY_PATH_EXPANDED=$(eval echo $SSH_KEY_PATH)
    
    if [ ! -f "$SSH_KEY_PATH_EXPANDED" ]; then
        log_error "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY_PATH_EXPANDED"
        exit 1
    fi
    
    SSH_KEY_CONTENT=$(cat "$SSH_KEY_PATH_EXPANDED")
    log_success "SSH –∫–ª—é—á –ø–æ–ª—É—á–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤
setup_secrets() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub Secrets..."
    
    # SERVER_HOST
    log_info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ SERVER_HOST..."
    echo "$SERVER_HOST" | gh secret set SERVER_HOST --repo "$REPO_OWNER/$REPO_NAME"
    log_success "SERVER_HOST –¥–æ–±–∞–≤–ª–µ–Ω"
    
    # SERVER_USER
    log_info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ SERVER_USER..."
    echo "$SERVER_USER" | gh secret set SERVER_USER --repo "$REPO_OWNER/$REPO_NAME"
    log_success "SERVER_USER –¥–æ–±–∞–≤–ª–µ–Ω"
    
    # SERVER_SSH_KEY
    log_info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ SERVER_SSH_KEY..."
    echo "$SSH_KEY_CONTENT" | gh secret set SERVER_SSH_KEY --repo "$REPO_OWNER/$REPO_NAME"
    log_success "SERVER_SSH_KEY –¥–æ–±–∞–≤–ª–µ–Ω"
    
    # PROJECT_PATH
    log_info "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ PROJECT_PATH..."
    echo "$PROJECT_PATH" | gh secret set PROJECT_PATH --repo "$REPO_OWNER/$REPO_NAME"
    log_success "PROJECT_PATH –¥–æ–±–∞–≤–ª–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤
verify_secrets() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤..."
    
    SECRETS=$(gh secret list --repo "$REPO_OWNER/$REPO_NAME")
    
    if echo "$SECRETS" | grep -q "SERVER_HOST"; then
        log_success "SERVER_HOST –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        log_error "SERVER_HOST –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if echo "$SECRETS" | grep -q "SERVER_USER"; then
        log_success "SERVER_USER –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        log_error "SERVER_USER –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if echo "$SECRETS" | grep -q "SERVER_SSH_KEY"; then
        log_success "SERVER_SSH_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        log_error "SERVER_SSH_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if echo "$SECRETS" | grep -q "PROJECT_PATH"; then
        log_success "PROJECT_PATH –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        log_error "PROJECT_PATH –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
test_deployment() {
    log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–∏—Ç
    echo "# Test deployment - $(date)" >> DEPLOYMENT_TEST.md
    git add DEPLOYMENT_TEST.md
    git commit -m "test: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ $(date '+%Y-%m-%d %H:%M:%S')"
    
    log_info "–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞..."
    git push origin main
    
    log_success "–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
    log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Actions –≤ GitHub –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
    log_info "URL: https://github.com/$REPO_OWNER/$REPO_NAME/actions"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub Secrets –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
    echo "=============================================================="
    echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_OWNER/$REPO_NAME"
    echo "–°–µ—Ä–≤–µ—Ä: $SERVER_HOST"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $SERVER_USER"
    echo "–ü—É—Ç—å –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_PATH"
    echo "=============================================================="
    
    check_gh_cli
    get_ssh_key
    setup_secrets
    verify_secrets
    
    echo ""
    log_success "üéâ GitHub Secrets –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìã –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã:"
    echo "   SERVER_HOST = $SERVER_HOST"
    echo "   SERVER_USER = $SERVER_USER"
    echo "   SERVER_SSH_KEY = [–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á]"
    echo "   PROJECT_PATH = $PROJECT_PATH"
    echo ""
    
    read -p "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        test_deployment
    else
        log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ"
        log_info "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        log_info "  git commit --allow-empty -m 'test: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ'"
        log_info "  git push origin main"
    fi
    
    echo ""
    log_info "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Actions:"
    echo "   https://github.com/$REPO_OWNER/$REPO_NAME/actions"
    echo ""
    log_info "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞–º–∏:"
    echo "   gh secret list --repo $REPO_OWNER/$REPO_NAME"
    echo "   gh secret delete SECRET_NAME --repo $REPO_OWNER/$REPO_NAME"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while [[ $# -gt 0 ]]; do
    case $1 in
        --repo)
            REPO_NAME="$2"
            shift 2
            ;;
        --owner)
            REPO_OWNER="$2"
            shift 2
            ;;
        --server)
            SERVER_HOST="$2"
            shift 2
            ;;
        --user)
            SERVER_USER="$2"
            shift 2
            ;;
        --path)
            PROJECT_PATH="$2"
            shift 2
            ;;
        --ssh-key)
            SSH_KEY_PATH="$2"
            shift 2
            ;;
        --help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–û–ø—Ü–∏–∏:"
            echo "  --repo REPO      –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: CredAnlv2)"
            echo "  --owner OWNER    –í–ª–∞–¥–µ–ª–µ—Ü —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: pavelstepanovpm)"
            echo "  --server HOST    IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 87.228.88.77)"
            echo "  --user USER      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å SSH (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: root)"
            echo "  --path PATH      –ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: /opt/credit-analytics)"
            echo "  --ssh-key PATH   –ü—É—Ç—å –∫ SSH –∫–ª—é—á—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ~/.ssh/DSkey_project)"
            echo "  --help           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            exit 0
            ;;
        *)
            log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
