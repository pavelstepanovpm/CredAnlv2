#!/bin/bash

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ 87.228.88.77
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/setup-server-simple.sh

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_HOST="87.228.88.77"
SERVER_USER="root"
SSH_KEY="~/.ssh/DSkey_project"
PROJECT_PATH="/opt/credit-analytics"

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
check_ssh() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ $SERVER_HOST..."
    
    if ssh -i ~/.ssh/DSkey_project -o ConnectTimeout=10 $SERVER_USER@$SERVER_HOST "echo 'SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!'"; then
        log_success "SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 0
    else
        log_error "SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        exit 1
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
setup_server() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ $SERVER_HOST..."
    
    ssh -i ~/.ssh/DSkey_project $SERVER_USER@$SERVER_HOST << 'EOF'
        set -e
        
        echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
        apt update && apt upgrade -y
        
        echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
        usermod -aG docker $USER
        
        echo "üêô –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
        curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        
        echo "üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Nginx..."
        apt install -y nginx
        
        echo "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."
        apt install -y git htop curl wget unzip ufw fail2ban
        
        echo "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
        ufw --force enable
        ufw allow ssh
        ufw allow 80/tcp
        ufw allow 443/tcp
        
        echo "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ fail2ban..."
        systemctl enable fail2ban
        systemctl start fail2ban
        
        echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
        mkdir -p /opt/credit-analytics/{data/postgres,data/redis,logs,backups,scripts}
        chown -R $USER:$USER /opt/credit-analytics
        
        echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
EOF
    
    log_success "–°–µ—Ä–≤–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
clone_project() {
    log_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    
    ssh -i ~/.ssh/DSkey_project $SERVER_USER@$SERVER_HOST << EOF
        cd $PROJECT_PATH
        
        # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        if [ ! -d ".git" ]; then
            git clone https://github.com/pavelstepanovpm/CredAnlv2.git .
        else
            echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
            git pull origin main
        fi
        
        # –°–æ–∑–¥–∞—Ç—å .env —Ñ–∞–π–ª
        cat > .env << 'ENVEOF'
# Database
POSTGRES_DB=credit_analytics
POSTGRES_USER=credit_user
POSTGRES_PASSWORD=secure_password_123

# Redis
REDIS_URL=redis://redis:6379

# Backend
DATABASE_URL=postgresql://credit_user:secure_password_123@db:5432/credit_analytics
PYTHONPATH=/app

# Frontend
REACT_APP_API_URL=http://87.228.88.77/api

# Security
SECRET_KEY=your_secret_key_here_123
ENVEOF
        
        echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
EOF
    
    log_success "–ü—Ä–æ–µ–∫—Ç –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
setup_nginx() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
    
    ssh -i ~/.ssh/DSkey_project $SERVER_USER@$SERVER_HOST << 'EOF'
        # –£–¥–∞–ª–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        rm -f /etc/nginx/sites-enabled/default
        
        # –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
        cat > /etc/nginx/sites-available/credit-analytics << 'NGINXEOF'
server {
    listen 80;
    server_name 87.228.88.77;

    # Frontend
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backend API
    location /api/ {
        proxy_pass http://localhost:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
NGINXEOF
        
        # –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        ln -s /etc/nginx/sites-available/credit-analytics /etc/nginx/sites-enabled/
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        nginx -t
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å Nginx
        systemctl reload nginx
        
        echo "‚úÖ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
EOF
    
    log_success "Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start_application() {
    log_info "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    ssh -i ~/.ssh/DSkey_project $SERVER_USER@$SERVER_HOST << EOF
        cd $PROJECT_PATH
        
        echo "üöÄ –ó–∞–ø—É—Å–∫ Docker Compose..."
        docker-compose up -d
        
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        sleep 30
        
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
        docker-compose ps
        
        echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
        docker-compose logs --tail=10
EOF
    
    log_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
health_check() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
    
    # –ü–æ–¥–æ–∂–¥–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    if curl -s -f "http://$SERVER_HOST" > /dev/null; then
        log_success "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$SERVER_HOST"
    else
        log_warning "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å API
    if curl -s -f "http://$SERVER_HOST/api/health" > /dev/null; then
        log_success "API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$SERVER_HOST/api"
    else
        log_warning "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ $SERVER_HOST"
    echo "=================================================="
    echo "–°–µ—Ä–≤–µ—Ä: $SERVER_HOST"
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $SERVER_USER"
    echo "–ü—É—Ç—å –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_PATH"
    echo "=================================================="
    
    check_ssh
    setup_server
    clone_project
    setup_nginx
    start_application
    health_check
    
    echo ""
    log_success "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "   üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://$SERVER_HOST"
    echo "   üîß API: http://$SERVER_HOST/api"
    echo "   üìä –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://$SERVER_HOST/api/docs"
    echo ""
    echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
    echo "   ssh -i ~/.ssh/DSkey_project $SERVER_USER@$SERVER_HOST"
    echo "   cd $PROJECT_PATH"
    echo "   docker-compose logs -f"
    echo "   docker-compose ps"
    echo ""
    echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub Secrets –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
    echo "2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
    echo "3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º–µ–Ω –∏ SSL (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
